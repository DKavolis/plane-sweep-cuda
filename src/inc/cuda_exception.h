#ifndef CUDA_EXCEPTION_H
#define CUDA_EXCEPTION_H

#include "exception.h"
#include <cuda_runtime_api.h>

#define CHECK_CUDA_ERRORS(S) do {cudaError_t eCUDAResult; \
        eCUDAResult = S; \
        if (eCUDAResult != cudaSuccess) {   \
        std::cerr << "\nCUDA error detected, code " << eCUDAResult <<  ", in line " << __LINE__ << " of "   \
        << __FILE__ << "\nGenerated by \"" #S << "\"\n"; \
        THROW_EXCEP(cudaGetErrorString(eCUDAResult));}} while (false)

#define CHECK_CUDA_ERRORS_AUTO(S) do {cudaError_t eCUDAResult; \
    eCUDAResult = S; \
    if (eCUDAResult != cudaSuccess) {   \
    std::cerr << "\nCUDA error detected, code " << eCUDAResult <<  " (" << cudaGetErrorString(eCUDAResult) <<    \
    "), in line " << __LINE__ << " of " << __FILE__ << "\nGenerated by \"" #S << "\"\n"; \
    THROW_EXCEP("");}} while (false)

#endif // CUDA_EXCEPTION_H
